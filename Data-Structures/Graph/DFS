import java.util.*;

public class Graph {
    private LinkedList<Character> list[];
    private boolean visited[];
    
    public Graph(int vertices){
        list = new LinkedList[vertices];
        visited = new boolean[vertices];

        for(int i=0; i<vertices; i++){
            list[i] = new LinkedList<>();
        }
    }

    void addEdges(char src, char dest){
        list[src].add(dest);
    }

    void DFS(char vertex){
        visited[vertex] = true;
        System.out.println(vertex);

        Iterator<Character> iterator = list[vertex].listIterator();
        while(iterator.hasNext()){
            char adj = iterator.next();
            if(!visited[adj]){
                DFS(adj);
            }
        }
    }

    public static void main(String[] args) {
        Graph graph = new Graph(103);

        graph.addEdges('a', 'b');
        graph.addEdges('a', 'c');
        graph.addEdges('b', 'd');
        graph.addEdges('c', 'e');
        graph.addEdges('d', 'f');

        System.out.println("Depth First Search");
        graph.DFS('a');
    }
}
